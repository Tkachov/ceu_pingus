#ifndef STRING_CEU
#define STRING_CEU

native/pre do
    ##include <string>
    ##define const_char_string const char*

    ##define new_String() new std::string()
    ##define std__string std::string

    ##define string_set(s, v) *s = v
    ##define string_add(s, v) *s += v
    ##define string_read_string(s, reader, id) reader->read_string(id, *s)
end

native @pure _new_String(),
             _string_set(),
             _string_add(),
             _string_read_string();

class String with
    function (_const_char_string v) => void set;
    function (_const_char_string v) => void add;
    function (_const_char_string v) => bool equals;
    function (_FileReader* reader, _const_char_string id) => void read_from_reader;
    function (void) => bool empty;
    function (void) => _const_char_string get;
do
    var _std__string&? ss = _PTR2REF(_new_String());
    finalize with _delete_obj(ss); end;

    function (_const_char_string v) => void set do
        _string_set(ss, v);
    end

    function (_const_char_string v) => void add do
        _string_add(ss, v);
    end

    function (_const_char_string v) => bool equals do
        return ss == v;
    end

    function (_FileReader* reader, _const_char_string id) => void read_from_reader do
        _string_read_string(ss, reader, id);
    end

    function (void) => bool empty do
        return ss.empty();
    end

    function (void) => _const_char_string get do
        return _PTR2REF(ss.c_str());
    end

    await FOREVER;
end

#endif
