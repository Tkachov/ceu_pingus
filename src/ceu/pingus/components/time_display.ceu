#ifndef TIME_DISPLAY_CEU
#define TIME_DISPLAY_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/sprite2.ceu"
#include "../../engine/gui/igui_component.ceu"
#include "../../proxies/eventproxy.ceu"
#include "../iworld.ceu"
#include "../ipingu_holder.ceu"
#include "../iserver.ceu"
#include "../global_interface.ceu"

native/pre do
    ##include "engine/display/display.hpp"
    ##include "engine/display/drawing_context.hpp"
    ##include "pingus/fonts.hpp"
    ##include "pingus/game_time.hpp"
    ##include "pingus/globals.hpp"
    ##include "pingus/server.hpp"
    ##include "util/log.hpp"
    ##include "util/string_util.hpp"    
    ##define GameTime__ticks_to_realtime_string(time_value) GameTime::ticks_to_realtime_string(time_value)
end

class TimeDisplay with
    interface IGUI_Component;
    var IServer& server;
do
    var Sprite2 infinity_symbol;
    infinity_symbol.reload_by_name("core/misc/infinity");

    function @rec (Vector2i pos) => bool is_at_func do
        return false;
    end

    every gc in draw do
        if server.get_plf().get_time() != -1 or {globals::developer_mode} then
            var int time_value = call/rec server.get_time();
            
            if server.get_plf().get_time() != -1 and not {globals::developer_mode} then
                time_value = time_value - server.get_plf().get_time();
            end

            gc:print_right({Fonts::pingus_small_fixnum}, _Vector2i(_Display__get_width() - 30, 3), _GameTime__ticks_to_realtime_string(time_value), 150);
        end
    end
end

#endif
