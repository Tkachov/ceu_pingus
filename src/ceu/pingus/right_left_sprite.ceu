#ifndef RIGHT_LEFT_SPRITE_CEU
#define RIGHT_LEFT_SPRITE_CEU

#include "../c.ceu"
#include "../sdl.ceu"
#include "../string.ceu"
#include "../engine/display/sprite3.ceu"
#include "ipingu.ceu"

class RightLeftSprite with
    var IPingu& pingu;
    var IPosGiver& pos_giver;
    var _std__string* right_name = null;
    var _std__string* left_name = null;

    function (void) => Sprite3* get_current;

    event void finished;
do
    finalize with
        _delete_obj(right_name);
        _delete_obj(left_name);
    end

    if right_name == null or left_name == null then
        _log_error("name's not given");
    end

    var Sprite3* current = null;

    function (void) => Sprite3* get_current do
        if current == null then _log_error("get_current() == null\n"); end
        return current;
    end

    loop do
        if pingu.direction().value != D_RIGHT and pingu.direction().value != D_LEFT then
            _log_error("unknown direction");
            await pingu.direction().changed;
        end

        if pingu.direction().value == D_RIGHT then
            var Sprite3 right with
                this.pos_giver = pos_giver;
            end;
            right.reload_by_name(right_name:c_str());
            current = _PTR2REF(&right);

            par/or do
                await pingu.direction().changed;
                current = null;
            with
                every right.finished do
                    emit finished;
                end
            end
        end

        if pingu.direction().value == D_LEFT then
            var Sprite3 left with
                this.pos_giver = pos_giver;
            end;
            left.reload_by_name(left_name:c_str());
            current = _PTR2REF(&left);

            par/or do
                await pingu.direction().changed;
                current = null;
            with
                every left.finished do
                    emit finished;
                end
            end
        end
    end
end

#endif
