#ifndef IWORLDMAP_CEU
#define IWORLDMAP_CEU

#include "pingus.ceu"

native/pre do
    ##include "engine/display/display.hpp"
    ##include "engine/display/graphic_context_state.hpp"
    ##include "engine/gui/gui_manager.hpp"
    ##include "engine/gui/rect_component.hpp"
    ##include "engine/gui/surface_button.hpp"
    ##include "engine/screen/screen_manager.hpp"
    ##include "engine/sound/sound.hpp"
    ##include "pingus/fonts.hpp"
    ##include "pingus/game_time.hpp"
    ##include "pingus/gettext.h"
    ##include "pingus/globals.hpp"
    ##include "pingus/savegame_manager.hpp"
    ##include "pingus/screens/game_session.hpp"
    ##include "pingus/screens/result_screen.hpp"
    ##include "pingus/screens/story_screen.hpp"
    ##include "pingus/server.hpp"
    ##include "pingus/stat_manager.hpp"    
    ##include "pingus/string_format.hpp"
    ##include "pingus/worldmap/pingus.hpp"
    ##include "pingus/worldmap/pingus_worldmap.hpp"
    ##include "pingus/worldmap/worldmap.hpp"
    ##include "pingus/worldmap/worldmap_screen.hpp"
    ##include "util/log.hpp"
    ##include "util/pathname.hpp"
    ##include "util/sexpr_file_writer.hpp"
    ##include "util/string_util.hpp"

    ##define WorldmapNS__Worldmap WorldmapNS::Worldmap
end

interface IWorldmap with
    var _WorldmapNS__Worldmap* me;

    function (void) => int get_width;
    function (void) => int get_height;
    function (void) => _PingusWorldmap get_worldmap;
    function (void) => Pingus* get_pingus;

    event void startup;
    event _DrawingContext* draw;
    event float update;
    event (int, int) mouse_move;
    event (int, int) mouse_press;
    event (int, int) mouse_secondary_press;
    event void delete;
end

#endif
