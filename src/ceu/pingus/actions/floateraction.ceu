#ifndef FLOATERACTION_CEU
#define FLOATERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../../engine/display/sprite.ceu"
#include "../../math/vector3f.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"

class FloaterAction with
    interface IAction;
    interface IPinguAction;
do
    var _PinguAction&? floater = _PTR2REF(pingu.set_ptr(_A_FLOATER));
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return (a == _A_BOMBER);
    end

    catchable = true;

    var _Sprite&? sprite = _new_SpriteA(_scc3("pingus/player", floater.pingu:get_owner_str(), "/floater/left"));
    finalize with _delete_Sprite(sprite); end;

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite, floater.pingu:get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            sprite.update();
            floater.pingu:set_velocity(_Vector3f(0.0, 1.0));

            if floater.rel_getpixel(0, -1) == _GT_NOTHING then
                floater.pingu:set_y(floater.pingu:get_y() + 1);
            else
                escape _A_WALKER;
            end
        end
    end
end

#endif
