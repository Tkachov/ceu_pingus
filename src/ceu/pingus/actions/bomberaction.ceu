#ifndef BOMBERACTION_CEU
#define BOMBERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../math/vector3f.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"

native/pre do
    ##include "pingus/actions/bomber.hpp"
    ##define ABomber Actions::Bomber

    ##include "pingus/particles/pingu_particle_holder.hpp"
    ##include "pingus/colliders/pingu_collider.hpp"
    ##include "pingus/movers/linear_mover.hpp"
    ##include "pingus/pingu_enums.hpp"
    ##include "pingus/worldobj.hpp"
    ##define WorldObj__get_world WorldObj::get_world
    ##define WorldObj__get_world_remove WorldObj::get_world()->remove
    ##define Colliders__PinguCollider Colliders::PinguCollider
    ##define Math__abs Math::abs
end

native @pure _Colliders__PinguCollider(),
             _WorldObj__get_world(),
             _WorldObj__get_world_remove();

class BomberAction with
    interface IAction;
do
    var _ABomber&? bomber = _PTR2REF((_ABomber*)pingu.set_ptr(_A_BOMBER));

    par/or do
        every pingu.e_UPDATE_CALLED do
            bomber.sprite.update();

            // Move the Pingu
            bomber.mover.reset(bomber.pingu:get_pos());
            bomber.mover.update(bomber.pingu:get_velocity(), _Colliders__PinguCollider(_pingu_height));
            bomber.pingu:set_pos(bomber.mover.get_pos());
        end
    with
        // If the Bomber hasn't 'exploded' yet...
        every pingu.e_UPDATE_CALLED do
            if bomber.sprite[bomber.pingu:direction].get_current_frame() > 9 then
                break;
            end

            // ...and it has hit Water or Lava
            if bomber.rel_getpixel(0, -1) == _GT_WATER or bomber.rel_getpixel(0, -1) == _GT_LAVA then
                escape _A_DROWN;
            end

            // ...and it has hit the ground too quickly
            if bomber.rel_getpixel(0, -1) != _GT_NOTHING and bomber.pingu:get_velocity().y > _deadly_velocity then
                escape _A_SPLASHED;
            end
        end

        //Play sound at 10th frame (>9)
        _WorldObj__get_world():play_sound("plop", bomber.pingu:get_pos());

        //Wait for 13th frame to throw particles
        every pingu.e_UPDATE_CALLED do
            if bomber.sprite[bomber.pingu:direction].get_current_frame() > 12 then
                break;
            end
        end

        // Throwing particles
        _WorldObj__get_world():get_pingu_particle_holder():add_particle(
            (int)bomber.pingu:get_x(), (int)bomber.pingu:get_y() - 5
        );

        //Wait for 13th frame again?..
        if bomber.sprite[bomber.pingu:direction].get_current_frame() < 13 then
            every pingu.e_UPDATE_CALLED do
                if bomber.sprite[bomber.pingu:direction].get_current_frame() >= 13 then
                    break;
                end
            end
        end

        _WorldObj__get_world_remove(
            bomber.bomber_radius,
            (int)((int)bomber.pingu:get_x() - (bomber.bomber_radius.get_width()/2)),
            (int)((int)bomber.pingu:get_y() - 16 - (bomber.bomber_radius.get_width()/2))
        );

        // The pingu explode
        if not bomber.sprite[bomber.pingu:direction].is_finished() then
            every pingu.e_UPDATE_CALLED do
                if bomber.sprite[bomber.pingu:direction].is_finished() then
                    break;
                end
            end
        end

        //Be dead forever
        loop do
            bomber.pingu:set_status(_PS_DEAD);
            await pingu.e_UPDATE_CALLED;
        end
    end
end

#endif
