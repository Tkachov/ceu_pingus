#ifndef JUMPERACTION_CEU
#define JUMPERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../right_left_sprite.ceu"

class JumperAction with
    interface IAction;
    interface IPinguAction;
do
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return true;
    end

    catchable = true;

    function @rec (void) => Vector3f get_center_pos do
        var Vector3f result = (call/rec pingu.get_pos());
        result.y = result.y - 16;
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_JUMPER);
    end

    var RightLeftSprite sprite with
        this.pingu = pingu;
        this.pos_giver = pingu;
        this.left_name = _new_String(_concat2(pingu.get_owner_str(), "/jumper/left"));
        this.right_name = _new_String(_concat2(pingu.get_owner_str(), "/jumper/right"));
    end;

    await global:e_PINGU_UPDATE_ALL;

    // if climber, do a wall-jump, else just jump forward
    if pingu.get_previous_action() == _A_CLIMBER then
        emit pingu.direction().change;
    end

    var float y_velocity = -4.58;
    var float x_velocity = y_velocity; //left

    if pingu.direction().is_right() then
        x_velocity = x_velocity * -1;
    end

    var Vector3f newvel = pingu.get_velocity();
    newvel.x = newvel.x + x_velocity;
    newvel.y = newvel.y + y_velocity;
    pingu.set_velocity(newvel);

    // Move the pingu in the air, so that it can start 'falling'
    pingu.set_y(pingu.get_y() - 1);

    escape _A_FALLER;
end

#endif
