#ifndef JUMPERACTION_CEU
#define JUMPERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"

native/pre do
    ##include "pingus/actions/jumper.hpp"
    ##define AJumper Actions::Jumper
end

class JumperAction with
    interface IAction;
do
    var _AJumper&? jumper = _PTR2REF((_AJumper*)pingu.set_ptr(_A_JUMPER));

    await pingu.e_UPDATE_CALLED;

    // if climber, do a wall-jump, else just jump forward
    if jumper.pingu:get_previous_action() == _A_CLIMBER then
        jumper.pingu:direction.change();
    end

    var float y_velocity = -4.58;
    var float x_velocity = y_velocity; //left

    if jumper.pingu:direction.is_right() then
        x_velocity = x_velocity * -1;
    end

    jumper.pingu:set_velocity(jumper.pingu:get_velocity() + _Vector3f(x_velocity, y_velocity));

    // Move the pingu in the air, so that it can start 'falling'
    jumper.pingu:set_y(jumper.pingu:get_y() - 1);

    escape _A_FALLER;
end

#endif
