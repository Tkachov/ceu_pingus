#ifndef BLOCKERACTION_CEU
#define BLOCKERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"
#include "../pingu_holder_listener.ceu"

class BlockerAction with
    interface IAction;
    interface IPinguAction;
do   
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return true;
    end

    catchable = true;

    function @rec (void) => Vector3f get_center_pos do
        var Vector3f result;
        result.x = pingu.get_pos().x;
        result.y = pingu.get_pos().y - 16;
        result.z = pingu.get_pos().z;
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_BLOCKER);
    end

    var StateSprite sprite;
    load_file_directions(sprite, "/blocker/");

    if pingu.rel_getpixel(0, -1) == _GT_NOTHING then
        if pingu.rel_getpixel(0, -2) == _GT_GROUND then
            pingu.set_y(pingu.get_y() + 1);
        else/if pingu.rel_getpixel(0, -2) == _GT_NOTHING and pingu.rel_getpixel(0, -3) == _GT_GROUND then
            pingu.set_y(pingu.get_y() + 2);
        end
    end

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite.get(pingu.me.direction), pingu.get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            if pingu.rel_getpixel(0,-1) == _GT_NOTHING then
                escape _A_FALLER;
            end

            loop catched in global:world:get_pingus():all_pingus do
                // avoid 'self' catch
                if catched == &pingu then
                    continue;
                end

                if catched:get_x() > pingu.get_x()-16 and
                   catched:get_x() < pingu.get_x()+16 and
                   catched:get_y() > pingu.get_y()-32 and
                   catched:get_y() < pingu.get_y()+5 then
                    if catched:get_x() > pingu.get_x() then
                        catched:me.direction.right();
                    else
                        catched:me.direction.left();
                    end
                end
            end

            sprite.update();
        end
    end
end

#endif
