#ifndef BLOCKERACTION_CEU
#define BLOCKERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../pingu_action.ceu"
#include "../state_sprite.ceu"
#include "../pingu_holder_listener.ceu"

class BlockerAction with
    interface IAction;
    interface IPinguAction;
do
    var _PinguAction&? blocker = _PTR2REF(pingu.set_ptr(_A_BLOCKER));
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return true;
    end

    catchable = true;

    var StateSprite sprite;
    load_file_directions(sprite, blocker, "/blocker/");

    if blocker.rel_getpixel(0, -1) == _GT_NOTHING then
        if blocker.rel_getpixel(0, -2) == _GT_GROUND then
            blocker.pingu:set_y(blocker.pingu:get_y() + 1);
        else/if blocker.rel_getpixel(0, -2) == _GT_NOTHING and blocker.rel_getpixel(0, -3) == _GT_GROUND then
            blocker.pingu:set_y(blocker.pingu:get_y() + 2);
        end
    end

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite.get(blocker.pingu:direction), blocker.pingu:get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            if blocker.rel_getpixel(0,-1) == _GT_NOTHING then
                escape _A_FALLER;
            end

            loop catched in global:world:get_pingus():all_pingus do
                // avoid 'self' catch
                if catched == &pingu then
                    continue;
                end

                if catched:me.get_x() > blocker.pingu:get_x()-16 and
                   catched:me.get_x() < blocker.pingu:get_x()+16 and
                   catched:me.get_y() > blocker.pingu:get_y()-32 and
                   catched:me.get_y() < blocker.pingu:get_y()+5 then
                    if catched:me.get_x() > blocker.pingu:get_x() then
                        catched:me.direction.right();
                    else
                        catched:me.direction.left();
                    end
                end
            end

            sprite.update();
        end
    end
end

#endif
