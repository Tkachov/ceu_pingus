#ifndef BRIDGERACTION_CEU
#define BRIDGERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"

native/pre do
    ##include "pingus/actions/bridger.hpp"
    ##define ABridger Actions::Bridger
    ##define B_BUILDING Actions::Bridger::Mode::B_BUILDING
    ##define B_WALKING Actions::Bridger::Mode::B_WALKING
end

class BridgerAction with
    interface IAction;
do
    var _ABridger&? bridger = _PTR2REF((_ABridger*)this.me);

    loop do
        //B_BUILDING first
        par/or do
            every pingu.e_UPDATE_CALLED do
                bridger.build_sprite[bridger.pingu:direction].update();
            end
        with
            every pingu.e_UPDATE_CALLED do
                if bridger.build_sprite[bridger.pingu:direction].get_current_frame () >= 7 then
                    break;
                end
            end

            if bridger.bricks > 0 then
                if bridger.brick_placement_allowed() then
                    bridger.place_a_brick();
                else
                    bridger.pingu:direction.change();
                    emit pingu.e_CALL_SET_ACTION => _A_WALKER;
                    break;
                end
            else // Out of bricks
                emit pingu.e_CALL_SET_ACTION => _A_WAITER;
                break;
            end

            if not bridger.build_sprite[bridger.pingu:direction].is_finished() then
                every pingu.e_UPDATE_CALLED do
                    if bridger.build_sprite[bridger.pingu:direction].is_finished() then
                        break;
                    end
                end
            end

            bridger.mode = _B_WALKING; //this is for C++'s draw() only
            bridger.build_sprite[bridger.pingu:direction].restart();
        end

        //B_WALKING second
        every pingu.e_UPDATE_CALLED do
            //original FIXME: Dangerous! might not be fixed timing
            if bridger.walk_sprite[bridger.pingu:direction].is_finished() then
                break;
            end

            bridger.walk_sprite.update();
        end

        if bridger.way_is_free() then
            bridger.mode = _B_BUILDING; //C++ draw()
            bridger.walk_sprite[bridger.pingu:direction].restart();
            bridger.walk_one_step_up();
        else // We reached a wall...
            bridger.pingu:direction.change();
            emit pingu.e_CALL_SET_ACTION => _A_WALKER;
            break;
        end
    end
end

#endif
