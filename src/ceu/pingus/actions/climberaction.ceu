#ifndef CLIMBERACTION_CEU
#define CLIMBERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../right_left_sprite.ceu"

class ClimberAction with
    interface IAction;
    interface IPinguAction;
do
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return (a==_A_FLOATER or a==_A_BOMBER or a==_A_JUMPER);
    end

    catchable = true;

    function @rec (void) => Vector3f get_center_pos do
        var Vector3f result = (call/rec pingu.get_pos());
        if pingu.direction().is_left() then
            result.x = result.x + 16;
        else
            result.x = result.x - 16;
        end
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_CLIMBER);
    end

    var RightLeftSprite sprite with
        this.pingu = pingu;
        this.pos_giver = pingu;
        this.left_name = _new_String(_concat2(pingu.get_owner_str(), "/climber/left"));
        this.right_name = _new_String(_concat2(pingu.get_owner_str(), "/climber/right"));
    end;

    loop do
        await global:e_PINGU_UPDATE_ALL;

        //there's something above
        if (call/rec pingu.rel_getpixel(0, 1)) != _GT_NOTHING and (call/rec pingu.rel_getpixel(0, 1)) != _GT_BRIDGE then
            emit pingu.direction().change;
            escape _A_WALKER;
        end

        //nothing above and there is still ground to walk on
        if (call/rec pingu.rel_getpixel(1, 1)) != _GT_NOTHING then
            pingu.set_posf(pingu.get_x(), pingu.get_y() - 1);
            continue;
        end

        // If Pingu able to get to new position without head collision
        if not (call/rec pingu.head_collision_on_walk(pingu.direction().value, 1)) then
            // Get ready to walk
            pingu.set_posf(
                pingu.get_x() + (float)pingu.direction().value,
                pingu.get_y() - 1.0
            );
        else
            // Get ready to fall
            emit pingu.direction().change;
        end

        // Finish climbing.
        escape _A_WALKER;
    end
end

#endif
