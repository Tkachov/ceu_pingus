#ifndef CLIMBERACTION_CEU
#define CLIMBERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"

class ClimberAction with
    interface IAction;
    interface IPinguAction;
do    
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return (a==_A_FLOATER or a==_A_BOMBER or a==_A_JUMPER);
    end

    catchable = true;

    function @rec (void) => Vector3f get_center_pos do
        var Vector3f result;
        if pingu.me.direction.is_left() then
            result.x = pingu.get_pos().x + 16;
        else
            result.x = pingu.get_pos().x - 16;
        end
        result.y = pingu.get_pos().y;
        result.z = pingu.get_pos().z;
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_CLIMBER);
    end

    var StateSprite sprite;
    load_file_directions(sprite, "/climber/");

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite.get(pingu.me.direction), pingu.get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            sprite.get(pingu.me.direction):update();

            //there's something above
            if pingu.rel_getpixel(0, 1) != _GT_NOTHING and pingu.rel_getpixel(0, 1) != _GT_BRIDGE then
                pingu.me.direction.change();
                escape _A_WALKER;
            end

            //nothing above and there is still ground to walk on
            if pingu.rel_getpixel(1, 1) != _GT_NOTHING then
                pingu.set_posf(pingu.get_x(), pingu.get_y() - 1);
                continue;
            end

            // If Pingu able to get to new position without head collision
            if not pingu.head_collision_on_walk(pingu.me.direction, 1) then
                // Get ready to walk
                pingu.set_posf(
                    pingu.get_x() + (float)pingu.me.direction,
                    pingu.get_y() - 1.0
                );
            else
                // Get ready to fall
                pingu.me.direction.change();
            end

            // Finish climbing.
            escape _A_WALKER;
        end
    end
end

#endif
