#ifndef ANGELACTION_CEU
#define ANGELACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../../engine/display/sprite3.ceu"
#include "../../math/math.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"

native/pre do
    ##include "engine/sound/sound.hpp"
    ##define Sound_PingusSound_play_sound Sound::PingusSound::play_sound

    ##include "pingus/globals.hpp"
    ##define globals__game_speed globals::game_speed
end

class AngelAction with
    interface IAction;
    interface IPinguAction;
do
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return true;
    end

    catchable = true;

    function @rec (void) => Vector3f get_center_pos do
        var Vector3f result = call/rec (call/rec pingu.get_pos());
        result.y = result.y - 16;
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_ANGEL);
    end

    var Sprite3 sprite with
        this.pos_giver = pingu;
    end;
    sprite.reload_by_name(_scc3("pingus/player", pingu.get_owner_str(), "/angel").c_str());    

    var float counter = 0;
    var float x_pos = pingu.get_x();
    
    loop do
        await global:world:update;

        counter = counter + (float)_globals__game_speed;
        pingu.set_posf(x_pos + 4.0*_Math__sin(counter*0.01), pingu.get_y() - 40.0*0.025);

        // Out of screen, let the pingu die
        if pingu.get_y() < -32 then
            escape _A_DEAD;
        end
    end
end

#endif
