#ifndef SPLASHEDACTION_CEU
#define SPLASHEDACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../../math/vector3f.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"

native/pre do
    ##include "pingus/actions/splashed.hpp"
    ##define ASplashed Actions::Splashed

    ##include "pingus/worldobj.hpp"
    ##define WorldObj__get_world WorldObj::get_world
end

native @pure _WorldObj__get_world();

class SplashedAction with
    interface IAction;
do
    var _ASplashed&? splashed = _PTR2REF((_ASplashed*)pingu.set_ptr(_A_SPLASHED));

    finalize
        splashed.sprite = _make_sprite("pingus/player", splashed.pingu:get_owner_str(), "/splat");
    with end;

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw(gc, splashed.sprite, splashed.pingu:get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            splashed.sprite.update();

            if splashed.sprite.is_finished() then
                splashed.pingu:set_status(_PS_DEAD);
            end
        end
    with
        await pingu.e_UPDATE_CALLED;
        _WorldObj__get_world():play_sound("splash", splashed.pingu:get_pos());
    end
end

#endif
