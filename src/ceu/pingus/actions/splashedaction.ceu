#ifndef SPLASHEDACTION_CEU
#define SPLASHEDACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../../engine/display/sprite.ceu"
#include "../../math/vector3f.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"

native/pre do
    ##include "pingus/worldobj.hpp"
    ##define WorldObj__get_world WorldObj::get_world
end

native @pure _WorldObj__get_world();

class SplashedAction with
    interface IAction;
    interface IPinguAction;
do    
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return false;
    end

    catchable = false;

    function (void) => Vector3f get_center_pos do
        var Vector3f result;
        result.x = pingu.me.get_pos().x;
        result.y = pingu.me.get_pos().y - 16;
        result.z = pingu.me.get_pos().z;
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_SPLASHED);
    end

    var _Sprite&? sprite = _PTR2REF(_new_SpriteA(_scc3("pingus/player", pingu.me.get_owner_str(), "/splat")));
    finalize with _delete_Sprite(sprite); end;

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite, pingu.me.get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            sprite.update();

            if sprite.is_finished() then
                escape _A_DEAD;
            end
        end
    with
        await pingu.e_UPDATE_CALLED;
        _WorldObj__get_world():play_sound("splash", pingu.me.get_pos());
    end
end

#endif
