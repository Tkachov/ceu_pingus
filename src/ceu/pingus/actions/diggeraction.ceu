#ifndef DIGGERACTION_CEU
#define DIGGERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"
native/pre do
    ##include "pingus/actions/digger.hpp"
    ##define ADigger Actions::Digger
end

class DiggerAction with
    interface IAction;
do
    var _ADigger&? digger = _PTR2REF((_ADigger*)pingu.set_ptr(_A_DIGGER));
    var int delay_count = 0;

    finalize
        digger.sprite = _make_sprite("pingus/player", digger.pingu:get_owner_str(), "/digger/left");
    with end;

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw(gc, digger.sprite, digger.pingu:get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            digger.sprite.update();
            delay_count = delay_count + 1;

            if digger.rel_getpixel(0, -1) == _GT_WATER or digger.rel_getpixel(0, -1) == _GT_LAVA then
                escape _A_DROWN;
            else
                if not digger.have_something_to_dig() then
                    digger.dig(true);
                    escape _A_WALKER;
                else/if delay_count % 4 == 0 then
                    digger.dig(false);
                end
            end
        end
    end
end

#endif
