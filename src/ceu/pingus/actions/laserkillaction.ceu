#ifndef LASERKILLACTION_CEU
#define LASERKILLACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"

native/pre do
    ##include "pingus/actions/laser_kill.hpp"
    ##define ALaserKill Actions::LaserKill
end

class LaserKillAction with
    interface IAction;
do
    var _ALaserKill&? laserkill = _PTR2REF((_ALaserKill*)pingu.set_ptr(_A_LASERKILL));

    laserkill.sprite.load(_D_LEFT,  _Sprite("other/laser_kill/left"));
    laserkill.sprite.load(_D_RIGHT, _Sprite("other/laser_kill/right"));

    par do
        every pingu.e_UPDATE_CALLED do
            if laserkill.sprite[laserkill.pingu:direction].is_finished() then
                laserkill.pingu:set_status(_PS_DEAD);
            else
                laserkill.sprite[laserkill.pingu:direction].update();
            end
        end
    with
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw(gc, laserkill.sprite[laserkill.pingu:direction], laserkill.pingu:get_pos() + _Vector3f(0, 2));
        end
    end
end

#endif
