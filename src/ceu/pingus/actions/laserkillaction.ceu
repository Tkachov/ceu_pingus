#ifndef LASERKILLACTION_CEU
#define LASERKILLACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"

class LaserKillAction with
    interface IAction;
    interface IPinguAction;
do
    var _PinguAction&? laserkill = _PTR2REF(pingu.set_ptr(_A_LASERKILL));
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return true;
    end

    catchable = false;

    function (void) => Vector3f get_center_pos do
        var Vector3f result;
        result.x = pingu.me.get_pos().x;
        result.y = pingu.me.get_pos().y - 16;
        result.z = pingu.me.get_pos().z;
        return result;
    end

    var StateSprite sprite;
    sprite.load_file(_D_LEFT,  "other/laser_kill/left");
    sprite.load_file(_D_RIGHT, "other/laser_kill/right");

    par do
        every pingu.e_UPDATE_CALLED do
            if sprite.get(laserkill.pingu:direction):is_finished() then
                escape _A_DEAD;
            else
                sprite.get(laserkill.pingu:direction):update();
            end
        end
    with
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite.get(laserkill.pingu:direction), laserkill.pingu:get_pos() + _Vector3f(0, 2));
        end
    end
end

#endif
