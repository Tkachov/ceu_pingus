#ifndef WAITERACTION_CEU
#define WAITERACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"

native/pre do
    ##include "pingus/actions/waiter.hpp"
    ##define AWaiter Actions::Waiter
end

class WaiterAction with
    interface IAction;
do
    var _AWaiter& waiter = _PTR2REF((_AWaiter*)pingu.set_ptr(_A_WAITER));

    finalize
        waiter.sprite = _make_sprite("pingus/player", waiter.pingu:get_owner_str(), "/waiter/left");
    with end;

    par do
        every pingu.e_UPDATE_CALLED do
              waiter.sprite.update();
        end
    with
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw(gc, waiter.sprite, waiter.pingu:get_pos());
        end
    with
        //in C++ there was a countdown from 2 to 0 with step 0.025 per frame - that's 80 frames
        loop i in 80 do
            await pingu.e_UPDATE_CALLED;
        end
        escape _A_WALKER;
    end
end

#endif
