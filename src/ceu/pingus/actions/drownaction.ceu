#ifndef DROWNACTION_CEU
#define DROWNACTION_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/scene_context.ceu"
#include "../iaction.ceu"
#include "../ipingu.ceu"
#include "../state_sprite.ceu"

class DrownAction with
    interface IAction;
    interface IPinguAction;
do
    pingu.ceu_action = &this;

    function (int a) => bool change_allowed do
        return true;
    end

    catchable = false;

    function (void) => Vector3f get_center_pos do
        var Vector3f result;
        result.x = pingu.me.get_pos().x;
        result.y = pingu.me.get_pos().y - 16;
        result.z = pingu.me.get_pos().z;
        return result;
    end

    function (void) => _const_char_string get_name do
        return _get_screenname(_A_DROWN);
    end

    var StateSprite sprite;
    load_file_directions(sprite, "/drownfall/");

    par do
        every gc in pingu.e_DRAW_CALLED do
            _gc_color_draw2(gc, sprite.get(pingu.me.direction), pingu.me.get_pos());
        end
    with
        every pingu.e_UPDATE_CALLED do
            sprite.get(pingu.me.direction):update();

            if sprite.get(pingu.me.direction):is_finished() then
                escape _A_DEAD;
            end
        end
    end
end

#endif
