#ifndef SPIKE_CEU
#define SPIKE_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../pingu_holder_listener.ceu"

class Spike with
    interface IWorldObj;
    var _Sprite&? surface;
do
    var _WorldObj&? spike = _PTR2REF(me);
    global:world:add_object(&this);
    var bool killing = false;

    //delete spike
    finalize with _delete_obj(surface); end;

    par/or do
        every gc in e_DRAW do
            if killing then
                _gc_color_draw2(gc, &surface, spike.pos);
            end
        end
    with
        every e_UPDATE do
            if killing then
                surface.update();
            end

            loop pingu in global:world:get_pingus():all_pingus do
                if not killing then
                    if pingu:get_x() > spike.pos.x+16-5 and pingu:get_x() < spike.pos.x+16+5 and
                       pingu:get_y() > spike.pos.y and pingu:get_y() < spike.pos.y+32 then
                      surface.restart();
                      killing = true;
                    end
                else
                    if surface.get_current_frame() == 3 and
                       pingu:get_x() > spike.pos.x+16-12 and pingu:get_x() < spike.pos.x+16+12 and
                       pingu:get_y() > spike.pos.y and pingu:get_y() < spike.pos.y+32 then
                      emit pingu:e_CHANGE_ACTION => _A_DEAD;
                    end
                end
            end

            if surface.get_current_frame() == surface.get_frame_count()-1 then
                killing = false;
            end
        end
    with
        await e_DELETE;
    end
end

#endif
