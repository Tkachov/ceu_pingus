#ifndef SWITCH_DOOR_DOOR_CEU
#define SWITCH_DOOR_DOOR_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../math/vector3f.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "iswitch_door_door.ceu"

class SwitchDoorDoor with
    interface ISwitchDoorDoor;

    // The height of the door in graphic tiles
    var int door_height;

    var _Sprite&? door_box;
    var _CollisionMask&? door_box_cmap;
    var _Sprite&? door_tile;
    var _CollisionMask&? door_tile_cmap;

    // True if the door is opening
    var bool is_opening;

    // The current height of the door, it might decrease when the door
    // is opening, it will be zero when the door is fully opened
    var int current_door_height;
do
    call/rec global:world:add_object(&this);

    function (_FileReader* reader) => void construct do end;

    function (void) => float get_z_pos do return 100; end
    function (Vector3f p) => void set_pos do pos = p; end
    function (void) => Vector3f get_pos do return pos; end

    finalize with
        _delete_obj(id);
        _delete_obj(door_box);
        _delete_obj(door_box_cmap);
        _delete_obj(door_tile);
        _delete_obj(door_tile_cmap);
    end;

    function (void) => void open_door do
        is_opening = true;
    end

    par/or do
         every e_STARTUP do
            _colmap_put(
                global:world:world:get_colmap(),
                door_box_cmap,
                (int)pos.x,
                (int)pos.y,
                _GT_SOLID
            );

            loop/100 i in door_height do
                _colmap_put(
                    global:world:world:get_colmap(),
                    door_tile_cmap,
                    (int)pos.x,
                    (int)pos.y + i*door_tile.get_height() + door_box.get_height(),
                    _GT_SOLID
                );
            end
        end
    with
        every gc in e_DRAW do
            _gc_color_draw2(gc, &door_box, _toVector3f(pos));
            loop/500 i in current_door_height do
                _gc_color_draw2(
                    gc,
                    &door_tile,
                    _Vector3f(
                        pos.x,
                        pos.y + (float)(i*door_tile.get_height() + door_box.get_height())
                    )
                );
            end
        end
    with
        every e_UPDATE do
            if current_door_height>0 and is_opening then
                // Open the door
                current_door_height = current_door_height - 1;

                // If the door is opend enough, so that a pingus fits under
                // it, we remove the door from the colmap
                if current_door_height+10 < door_height then
                    _colmap_put(
                        global:world:world:get_colmap(),
                        door_box_cmap,
                        (int)pos.x,
                        (int)pos.y,
                        _GT_NOTHING
                    );

                    loop/100 i in door_height do
                        _colmap_put(
                            global:world:world:get_colmap(),
                            door_tile_cmap,
                            (int)pos.x,
                            (int)pos.y + i*door_tile.get_height() + door_box.get_height(),
                            _GT_NOTHING
                        );
                    end
                end
            end
        end
    with
        await e_DELETE;
    end
end

#endif
