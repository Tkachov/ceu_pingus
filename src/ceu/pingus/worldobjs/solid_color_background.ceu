#ifndef SOLID_COLOR_BACKGROUND_CEU
#define SOLID_COLOR_BACKGROUND_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../global_interface.ceu"

native/pre do
    ##include "math/color.hpp"
    ##define new_Color new Color
end

native @pure _new_Color();

class SolidColorBackground with
    interface IWorldObj;
    var _Color&? color;
do
    call/rec global:world:add_object(&this);

    function (_FileReader* reader) => void construct do end;

    function (void) => float get_z_pos do return -10; end
    function (Vector3f p) => void set_pos do end
    function (void) => Vector3f get_pos do return pos; end

    finalize with
        _delete_obj(color);
    end

    par/or do
        every gc in global:draw do
            //TODO: this MUST happen before everything else (z = -10)
            //check that fill_screen() puts Request in a queue, not filling screen
            _gc_color_fill_screen(gc, _deref(color));
        end
    with
        await e_DELETE;
    end
end

#endif
