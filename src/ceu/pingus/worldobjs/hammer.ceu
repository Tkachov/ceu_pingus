#ifndef HAMMER_CEU
#define HAMMER_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../pingu_holder_listener.ceu"

class Hammer with
    interface IWorldObj;
    var _Sprite&? sprite;
do
    var _WorldObj&? hammer = _PTR2REF(me);
    var int current_frame = 0;

    //delete hammer
    finalize with _delete_Sprite(sprite); end;

    par/or do
        every package in WORLDOBJ_DRAW do
            if package:worldobj != &hammer then
                continue;
            end

            _gc_color_draw2(package:gc, &sprite, hammer.pos);
        end
    with
        loop do
            loop do
                var _World* w = await WORLD_UPDATE;
                if w != hammer.world then
                    continue;
                end

                current_frame = current_frame + 1;
                sprite.set_frame(current_frame);

                if current_frame == sprite.get_frame_count()-1 then
                    loop pingu in global:world:get_pingus():all_pingus do
                        if pingu:get_current_action() == _A_SPLASHED or
                           pingu:get_current_action() == _A_DEAD or pingu:get_current_action() == _A_EXITED then
                            continue;
                        end

                        if pingu:get_x() <= hammer.pos.x+55 or pingu:get_x() >= hammer.pos.x+77 or
                           pingu:get_y() <= hammer.pos.y+146 or pingu:get_y() >= hammer.pos.y+185 then
                            continue;
                        end

                        emit pingu:e_CHANGE_ACTION => _A_SPLASHED;
                    end

                    break;
                end
            end

            //roll back
            loop do
                var _World* w = await WORLD_UPDATE;
                if w != hammer.world then
                    continue;
                end

                current_frame = current_frame - 1;
                sprite.set_frame(current_frame);
                if current_frame == 0 then
                    break;
                end
            end
        end
    with
        var _WorldObj* e = await DELETE_WORLDOBJ until (e == &hammer);
    end
end

#endif
