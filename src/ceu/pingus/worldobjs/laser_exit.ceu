#ifndef LASER_EXIT_CEU
#define LASER_EXIT_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../pingu_holder_listener.ceu"

class LaserExit with
    interface IWorldObj;
    var _Sprite&? surface;
do
    call/rec global:world:add_object(&this);

    function (_FileReader* reader) => void construct do end;

    function (void) => float get_z_pos do
        return pos.z;
    end

    function (Vector3f p) => void set_pos do
        pos = p;
    end

    function (void) => Vector3f get_pos do
        return pos;
    end

    finalize with
        _delete_obj(surface);
    end

    var bool killing = false;

    par/or do
        every gc in e_DRAW do
            _gc_color_draw2(gc, &surface, _toVector3f(pos));
        end
    with
        every e_UPDATE do
            if not killing then
                loop pingu in global:world:get_pingus():all_pingus do
                    if pingu:get_x() <= pos.x+34 or pingu:get_x() >= pos.x+34+10 or
                       pingu:get_y() <= pos.y+43 or pingu:get_y() >= pos.y+43+20 then
                        continue;
                    end

                    if pingu:get_current_action() != _A_LASERKILL and
                       pingu:get_current_action() != _A_DEAD and pingu:get_current_action() != _A_EXITED then
                        killing = true;
                        emit pingu:e_CHANGE_ACTION => _A_LASERKILL;
                        break;
                    end
                end
            end

            if killing then
                if surface.is_finished() then
                    surface.restart();
                    killing = false;
                else
                    surface.update();
                end
            end
        end
    with
        await e_DELETE;
    end
end

#endif
