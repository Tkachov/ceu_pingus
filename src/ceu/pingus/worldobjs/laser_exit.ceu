#ifndef LASER_EXIT_CEU
#define LASER_EXIT_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../pingu_holder_listener.ceu"

class LaserExit with
    interface IWorldObj;
    var _Sprite&? surface;
do
    var _WorldObj&? exit = _PTR2REF(me);
    var bool killing = false;

    //delete laser_exit
    finalize with _delete_obj(surface); end

    par/or do
        every package in WORLDOBJ_DRAW do
            if package:worldobj != &exit then
                continue;
            end

            _gc_color_draw2(package:gc, &surface, exit.pos);
        end
    with
        every w in WORLD_UPDATE do
            if w != exit.world then
                continue;
            end

            if not killing then
                loop pingu in global:world:get_pingus():all_pingus do
                    if pingu:get_x() <= exit.pos.x+34 or pingu:get_x() >= exit.pos.x+34+10 or
                       pingu:get_y() <= exit.pos.y+43 or pingu:get_y() >= exit.pos.y+43+20 then
                        continue;
                    end

                    if pingu:get_current_action() != _A_LASERKILL and
                       pingu:get_current_action() != _A_DEAD and pingu:get_current_action() != _A_EXITED then
                        killing = true;
                        emit pingu:e_CHANGE_ACTION => _A_LASERKILL;
                        break;
                    end
                end
            end

            if killing then
                if surface.is_finished() then
                    surface.restart();
                    killing = false;
                else
                    surface.update();
                end
            end
        end
    with
        var _WorldObj* e = await DELETE_WORLDOBJ until (e == &exit);
    end
end

#endif
