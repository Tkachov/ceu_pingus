#ifndef LASER_EXIT_CEU
#define LASER_EXIT_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../engine/display/sprite3.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../pingu_holder_listener.ceu"

class LaserExit with
    interface IWorldObj;
do
    var Sprite3 surface with
        this.pos_giver = outer;
        this.active = false;
    end;
    surface.reload_by_name("traps/laser_exit");

    call/rec global:world:add_object(&this);

    function (_FileReader* reader) => void construct do end;
    function (void) => float get_z_pos do return pos.z; end
    function (Vector3f p) => void set_pos do pos = p; end
    function (void) => Vector3f get_pos do return pos; end

    par/or do        
        loop do
            //not killing
            surface.active = false;
            every e_UPDATE do
                loop pingu in global:world:get_pingus():all_pingus do
                    if pingu:get_x() <= pos.x+34 or pingu:get_x() >= pos.x+34+10 or
                       pingu:get_y() <= pos.y+43 or pingu:get_y() >= pos.y+43+20 then
                        continue;
                    end

                    if pingu:get_current_action() != _A_LASERKILL and
                       pingu:get_current_action() != _A_DEAD and pingu:get_current_action() != _A_EXITED then
                        surface.active = true;
                        emit pingu:e_CHANGE_ACTION => _A_LASERKILL;
                        break;
                    end
                end

                if surface.active then
                    break;
                end
            end

            //killing
            await surface.finished;
            surface.restart();
        end
    with
        await e_DELETE;
    end
end

#endif
