#ifndef SWITCH_DOOR_SWITCH_CEU
#define SWITCH_DOOR_SWITCH_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../math/vector3f.ceu"
#include "../iworld.ceu"
#include "../worldobj.ceu"
#include "../ipingu_holder.ceu"
#include "../pingu_holder_listener.ceu"
#include "iswitch_door_door.ceu"

class SwitchDoorSwitch with
    interface IWorldObj;
    var _Sprite&? switch_sur;
    var _String&? m_target;
    var bool is_triggered;
do
    var _WorldObj&? switch_door_switch = _PTR2REF(me);
    global:world:add_object(&this);

    function (_FileReader* reader) => void construct do end;

    finalize with
        _delete_obj(switch_door_switch);
        _delete_obj(switch_sur);
        _delete_obj(m_target);
    end;

    var ISwitchDoorDoor* m_door = null;

    par/or do
         every e_STARTUP do
            if m_target.empty() then
                _log_error("target-id is empty");
            else
                m_door = _PTR2REF(global:world:get_switch_door_door(m_target.c_str()));
                if m_door == null then
                    _log_error("given target-id is not a SwitchDoorDoor");
                end
            end
        end
    with
        every gc in e_DRAW do
            _gc_color_draw2(gc, &switch_sur, switch_door_switch.pos);
        end
    with
        every e_UPDATE do
            if is_triggered or not m_door then
                continue;
            end

            // Check if a pingu is passing the switch
            loop pingu in global:world:get_pingus():all_pingus do
                if pingu:get_x() > switch_door_switch.pos.x and
                   pingu:get_x() < switch_door_switch.pos.x+(float)switch_sur.get_width() and
                   pingu:get_y() > switch_door_switch.pos.y and
                   pingu:get_y() < switch_door_switch.pos.y+(float)switch_sur.get_height() then
                    is_triggered = true;
                    m_door:open_door();
                    break;
                end
            end
        end
    with
        await e_DELETE;
    end
end

#endif
