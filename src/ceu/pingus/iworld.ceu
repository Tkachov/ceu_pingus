#ifndef IWORLD_CEU
#define IWORLD_CEU

#include "../c.ceu"
#include "../sdl.ceu"
#include "../string.ceu"
#include "../math/vector2i.ceu"
#include "ipingu_holder.ceu"
#include "components/ismallmap.ceu"
#include "particles/particles.ceu"
#include "worldobjs/iteleporter_target.ceu"
#include "worldobjs/iswitch_door_door.ceu"

native/pre do
    ##include "pingus/world.hpp"
    ##include "pingus/ground_map.hpp"
end

interface IWorld with
    var _World* world;

    function (void) => _GroundMap* get_gfx_map;
    function (void) => IPinguHolder* get_pingus;
    function (void) => IPinguParticlesHolder* get_pingu_particles_holder;
    function (void) => IRainParticlesHolder* get_rain_particles_holder;
    function (void) => ISmokeParticlesHolder* get_smoke_particles_holder;
    function (void) => ISnowParticlesHolder* get_snow_particles_holder;
    function (_const_char_string id) => ITeleporterTarget* get_teleporter_target;
    function (_const_char_string id) => ISwitchDoorDoor* get_switch_door_door;

    function (void) => bool check_armageddon;
    function (int player_id) => _Vector2i get_start_pos;
    function (void) => int get_width;
    function (void) => int get_height;
    function (void) => int get_time;

    /*
        Play a sound as if it would have been generated at the given
        position, adjust panning and volume by the position relative to
        the center of the screen

        @param name The name of the sound to play ("ohno", not "sounds/ohno.wav")
        @param pos Position from which the sound seems to come (z-pos is going to be ignored)
        @param volume The volume of the sound
    */
    function (_const_char_string name, Vector3f pos, float volume) => void play_sound;

    function (_CollisionMask* mask, int x, int y, int t) => void put;
    function (_CollisionMask* mask, int x, int y) => void remove;
    function (_const_char_string mask, int x, int y, int t) => void put_str;
    function (_const_char_string mask, int x, int y) => void remove_str;

    function @rec (IWorldObj* o) => void add_object;
    function (IWorldObj* o) => void remove_object;

    event _SceneContext* e_DRAW;
    event ISmallMap* e_DRAW_SMALLMAP;
    event void e_UPDATE;
    event void e_ARMAGEDDON;
end

#endif
