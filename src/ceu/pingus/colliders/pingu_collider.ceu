#ifndef PINGU_COLLIDER_CEU
#define PINGU_COLLIDER_CEU

#include "../../c.ceu"
#include "../../sdl.ceu"
#include "../../math/vector3f.ceu"
#include "../global_interface.ceu"
#include "../iworld.ceu"

class PinguCollider with
    var int height;
    function @rec (Vector3f current_pos, Vector3f step_vector) => bool work;
    function @rec (Vector3f pos) => int getpixel;
do
    function @rec (Vector3f current_pos, Vector3f step_vector) => bool work do
        var Vector3f new_pos = current_pos;
        new_pos.x = new_pos.x + step_vector.x;
        new_pos.y = new_pos.y + step_vector.y;
        new_pos.z = new_pos.z + step_vector.z;
        var int pixel;
        var bool falling = false;

        if step_vector.y > 0 then
            falling = true;
        end

        // If the Pingu is going to move sideways to the next pixel...
        if (int)(new_pos.x) != (int)(current_pos.x) then        
            var float top_of_pingu = new_pos.y - (float)(height);
            
            loop/1000 do
                if new_pos.y < top_of_pingu then
                    break;
                end

                pixel = call/rec getpixel(new_pos);

                // If there is something in the way, then Pingu has collided with
                // something.  However, if not falling and colliding with a
                // Bridge, allow Pingu to go through it.
                if pixel != _GT_NOTHING and not (pixel == _GT_BRIDGE and not falling) then
                    return true;
                end

                new_pos.y = new_pos.y - 1;
            end      
        // If the Pingu is not falling...
        else/if not falling then
            var Vector3f npp = new_pos;
            npp.y = npp.y - (float)(height);
            pixel = call/rec getpixel(npp);

            // If the top of the Pingu has hit something except a bridge...
            if pixel != _GT_NOTHING and pixel != _GT_BRIDGE then            
                return true;
            end
        // If the Pingu's "feet" has hit something...
        else/if (call/rec getpixel(new_pos)) != _GT_NOTHING then        
            return true;
        end

        return false;
    end

    function @rec (Vector3f pos) => int getpixel do
        return global:world:get_colmap():getpixel(pos.x, pos.y);
    end

    await FOREVER;
end

#endif
