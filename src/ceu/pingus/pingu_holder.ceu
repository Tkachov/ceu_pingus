#ifndef PINGU_HOLDER_CEU
#define PINGU_HOLDER_CEU

#include "../c.ceu"
#include "../sdl.ceu"
#include "pingu.ceu"
#include "pingu_holder_listener.ceu"

native/pre do
    ##include "pingus/pingu_holder.hpp"
    ##define Package PinguHolder::PinguPackage
    ##define GetPackage PinguHolder::GetPinguPackage
    ##define new_Pingu new Pingu
end

input _Package* NEW_PINGU;
input _GetPackage* GET_PINGU;
input _PinguHolder* DELETE_PINGU_HOLDER;

native @pure _new_Pingu();

class PinguHolder with
    var _PinguHolder& me;
    pool Pingu[] all_pingus;
do
    var _PinguHolder&? me_ = _PTR2REF((_PinguHolder*)&this.me);
    var int pingus_emitted = 0;
    var int pingus_exited = 0;
    var int pingus_dead = 0;

    par do
        every package in NEW_PINGU do
            if package:holder != &me_ then
                continue;
            end

            if me_.number_of_allowed > pingus_emitted then
                // We use all_pingus.size() as pingu_id, so that id == array index
                spawn Pingu in all_pingus with
                    this.me = _new_Pingu(pingus_emitted, package:pos, package:owner);
                    package:result = &this.me;
                end;

                pingus_emitted = pingus_emitted + 1;
                me_.released = pingus_emitted;
            else
                package:result = 0;
            end
        end
    with
        every p in global:e_PINGU_DIED do
            pingus_dead = pingus_dead + 1;
            me_.dead = pingus_dead;
            me_.erase(_PTR2REF(p));
        end
    with
        every p in global:e_PINGU_EXITED do
            pingus_exited = pingus_exited + 1;
            me_.exited = pingus_exited;
            me_.erase(_PTR2REF(p));
        end
    with
        every package in GET_PINGU do
            if package:holder != &me_ then
                continue;
            end

            package:result = 0;
            if package:id < pingus_emitted then
                loop pingu in all_pingus do
                    if pingu:me.id == package:id then
                        package:result = _PTR2REF(&pingu:me);
                    end
                end
            end
        end
    end
end

#endif
