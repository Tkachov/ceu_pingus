#ifndef PINGU_HOLDER_CEU
#define PINGU_HOLDER_CEU

#include "../c.ceu"
#include "../sdl.ceu"
#include "pingu.ceu"

native/pre do
    ##include "pingus/pingu_holder.hpp"
    ##define Package PinguHolder::PinguPackage
    ##define new_Pingu new Pingu
end

input _Package* NEW_PINGU;
input _PinguHolder* DELETE_PINGU_HOLDER;

native @pure _new_Pingu();

class PinguHolder with
    var _PinguHolder& me;
    pool Pingu[] all_pingus;
do
    var _PinguHolder&? me_ = _PTR2REF((_PinguHolder*)&this.me);

    par/or do
        every package in NEW_PINGU do
            if package:holder != &me_ then
                continue;
            end

            spawn Pingu in all_pingus with
                this.me = _new_Pingu(package:id, package:pos, package:owner);
                package:result = &this.me;
            end;
        end
    with
        var _PinguHolder* p = await DELETE_PINGU_HOLDER until (p == &me_);
    end
end

#endif
