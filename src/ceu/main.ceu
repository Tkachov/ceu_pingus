native/pre do
    ##define private public
    ##define protected public
end

#include "c.ceu"
#include "sdl.ceu"
#include "pingus/colliders/pingu_collider.ceu"
#include "pingus/components/menubutton.ceu"
#include "pingus/screens/demo_session.ceu"
#include "pingus/screens/game_session.ceu"
#include "pingus/pingu_holder.ceu"
#include "pingus/pingu_events.ceu"
#include "pingus/global_interface.ceu"
#include "pingus/server_event.ceu"
#include "pingus/iworld.ceu"
#include "proxies/proxyeventlist.ceu"

event void e_PINGU_DIED;
event void e_PINGU_EXITED;
event _SceneContext* e_PINGU_DRAW_WALKER;
event _SceneContext* e_PINGU_DRAW_OTHERS;
event void e_PINGU_UPDATE_ALL;

//global events
event _SceneContext* draw;
event void update;

input _MenuButton* NEW_MENUBUTTON;
input _DemoSession* NEW_DEMO_SESSION;
input _GameSession* NEW_GAME_SESSION;

var IWorld* world = null;

par/or do
    await SDL_QUIT;
with
    every new_menubutton in NEW_MENUBUTTON do
        spawn MenuButton with
            this.me = _PTR2REF(new_menubutton);
        end;
    end
with
    every new_demo_session in NEW_DEMO_SESSION do
        spawn DemoSession with
            this.me = _PTR2REF(new_demo_session);
        end;
    end
with
    every new_game_session in NEW_GAME_SESSION do
        spawn GameSession with
            this.me = _PTR2REF(new_game_session);
        end;
    end
with
    every new_collider in NEW_PINGU_COLLIDER do
        spawn PinguCollider with
            this.me = _PTR2REF(new_collider);
        end;
    end
with
    every new_server in NEW_SERVER do
        spawn Server with
            this.me = _PTR2REF(new_server);
        end;
    end
with
    every new_se in NEW_SERVER_EVENT do
        spawn ServerEvent with
            this.me = _PTR2REF(new_se);
        end;
    end
with
    loop do
        await SDL_REDRAW;
    end
with
    //FPS
    loop do
        var int c = 0;
        par/or do
            every SDL_REDRAW do
                c = c + 1;
            end
        with
            await 1s;
        end
        _printf("[FPS=%d]\n", c);
    end
end

//I'm not sure about this thingy, as it works with and without it:

escape 0;
