#ifndef POINTERPROXY_CEU
#define POINTERPROXY_CEU

#include "proxyeventlist.ceu"

#include "../c.ceu"
#include "../engine/gui/igui_component.ceu"

native/pre do
    ##include "engine/gui/component.hpp"
    ##define GUI_Component GUI::Component
end

class PointerProxy with
    var IGUI_Component& gui;
do
    par do
        every package in ON_POINTER_MOVE do
            if package:component == &gui.me then
                emit gui.mouse_move => (package:mouse_pos.x, package:mouse_pos.y);
            end
        end
    with
        loop do
            do
                var _GUI_Component* g =
                    await ON_POINTER_ENTER until (g == &gui.me);
                emit gui.mouse_enter;
            end
            do
                var _GUI_Component* g =
                    await ON_POINTER_LEAVE until (g == &gui.me);
                emit gui.mouse_leave;
            end
        end
    end
end

#endif
